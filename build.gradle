buildscript {
    repositories {
        jcenter()
        maven {
            name 'JitPack'
            url 'https://jitpack.io'
        }
        maven { url = "https://maven.minecraftforge.net/" }
        maven { url = "https://repo.spongepowered.org/maven" }
    }
    dependencies {
        classpath "com.github.asbyth:ForgeGradle:ddb1eb0"
        classpath 'com.github.LxGaming:MixinGradle:d75e32e'//0.6-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:6.1.0'
    }
}

apply plugin: 'java'
apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'

version = "0.0.1"
group = "dev.bozho" //http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "ThaliaScripts" //name of the output jar

sourceCompatibility = targetCompatibility = 1.8 //using java 8
compileJava.options.encoding = 'UTF-8'

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22" //mappings for 1.8.9
    makeObfSourceJar = false //disable creation of sources jar
}

configurations {
    // Creates an extra configuration that implements `implementation` to be used later as the configuration that shades libraries
    include
    implementation.extendsFrom(include)
}

repositories {
    jcenter()
    mavenCentral()
    maven { url 'https://repo.spongepowered.org/maven/' }
    maven {
        name "jitpack"
        url "https://jitpack.io"
    }
}

dependencies {
    compile('org.spongepowered:mixin:0.7.11-SNAPSHOT')
    annotationProcessor('org.spongepowered:mixin:0.7.11-SNAPSHOT')
}

mixin {
    add sourceSets.main, "mixins.thaliascripts.refmap.json"
}

jar {
    manifest.attributes(
            'Main-Class': 'ThaliaScripts',
            'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
            'MixinConfigs': "mixins.thaliascripts.json",
            'FMLCorePluginContainsFMLMod': true,
            "ForceLoadAsMod": true,
    )
}

/**
 * This task simply replaces the `${version}` and `${mcversion}` properties in the mcmod.info with the data from Gradle
 */
shadowJar {
    dependencies {
        include(dependency('org.spongepowered:mixin:0.7.11-SNAPSHOT'))
    }

    exclude 'module-info.class'
    exclude 'dummyThing'
    exclude 'LICENSE.txt'
}

reobf {
    shadowJar {
        mappingType = 'SEARGE'
    }
}


build.dependsOn(shadowJar)
runClient.dependsOn(build)

processResources
        {
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'
                expand 'version':project.version, 'mcversion':project.minecraft.version
            }

            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }

            rename '(.+_at.cfg)', 'META-INF/$1'
        }

task moveResources {
    doLast {
        ant.move file: "${buildDir}/resources/main",
                todir: "${buildDir}/classes/java"
    }
}

task copyMod {
    doLast {
        println "Copying mod into workbench"
        ant.copy file: "${buildDir}/libs/ThaliaScripts-${project.version}-all.jar",
                todir: "C:/Program Files/MultiMC/instances/WORKBENCH/.minecraft/mods"
    }
}

moveResources.dependsOn processResources
classes.dependsOn moveResources

build.finalizedBy(copyMod)